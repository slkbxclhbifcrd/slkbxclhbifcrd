<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
 
 <groupId>com.github.drinkjava2</groupId>
 <artifactId>jsqlbox</artifactId>
 <version>1.0.0</version>
 <packaging>jar</packaging> 
 
 <name>jSQLBox</name>
 <description>jSQLBox is a macro scale persistence tool for Java8+</description>
 <url>https://github.com/drinkjava2/jsqlbox</url>
  
 <issueManagement>
    <system>Github Issue</system>
    <url>https://github.com/drinkjava2/jsqlbox/issues</url>
 </issueManagement>

 <licenses>
   <license>
     <name>The Apache Software License, Version 2.0</name>
     <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
   </license>
 </licenses>

 <developers>
   <developer>
     <name>Yong Zhu</name>
     <email>yong9981@gmail.com</email>
     <url>https://github.com/drinkjava2/</url>
   </developer>
 </developers>

 <scm>
   <connection>scm:git@github.com:drinkjava2/jsqlbox.git</connection>
   <developerConnection>scm:git@github.com:drinkjava2/jsqlbox.git</developerConnection>
   <url>git@github.com:drinkjava2/jsqlbox.git</url>
 </scm>


    <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding> 
        <version.java>1.8</version.java>
        <version.javadoc>8</version.javadoc>
        <version.compiler-plugin>3.3</version.compiler-plugin>
        <version.war-plugin>2.6</version.war-plugin>
        <version.clean-plugin>3.0.0</version.clean-plugin>
        <version.resources-plugin>2.7</version.resources-plugin>
        <version.surefire-plugin>2.19</version.surefire-plugin>
        <version.jar-plugin>2.6</version.jar-plugin>
        <version.source-plugin>2.4</version.source-plugin>
        <version.javadoc-plugin>2.10.3</version.javadoc-plugin>
        <version.gpg-plugin>1.6</version.gpg-plugin>
		
		<!--Already tested on Spring 4.3.2, 4.3.6, 4.2.7 -->
        <spring.version>4.3.7</spring.version>
    </properties>

 <dependencies>   
    <!-- jSqlBox depends on jDialects to create pagination SQL and DDL -->
  	<dependency>  
		<groupId>com.github.drinkjava2</groupId>  
		<artifactId>jdialects</artifactId>  
		<version>1.0.1-SNAPSHOT</version>  
	</dependency>
 
	<!-- jSqlBox depends on Spring JdbcTemplate, I hope in future can kick JdbcTemplate out to avoid dependency of Spring -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}.RELEASE</version>
    </dependency>

    <!-- Spring context is needed for Transaction, I hope in future can kick Spring context out to avoid dependency of Spring  -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}.RELEASE</version> 
    </dependency>  


    <!-- ================================================================================================== -->
    <!-- Below dependencies are for unit test only, scope be set to "test"                                  -->
    <!-- jSqlBox should pass unit test on H2, MySql5, MSSQL2012 and Oracle11g                               -->  
    <!-- Note: Oracle11g JDBC driver need download manually                                                 -->  	
    <!-- ================================================================================================== --> 
    
    <!-- jBeanBox is a small IOC/AOP tool, in this project used to do some unit test configuration  -->
    <dependency>
        <groupId>com.github.drinkjava2</groupId>
        <artifactId>jbeanbox</artifactId>
        <version>2.4.2</version>
        <scope>test</scope>
    </dependency> 
    
    <!-- I's trying use JSP as SQL template -->
    <dependency>  
       <groupId>javax.servlet</groupId>  
       <artifactId>javax.servlet-api</artifactId>  
       <version>3.0.1</version>  
       <scope>test</scope>  
    </dependency> 
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>  
      <groupId>log4j</groupId>  
      <artifactId>log4j</artifactId>  
      <version>1.2.17</version> 
      <scope>test</scope> 
    </dependency> 
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.22</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.22</version>
      <scope>test</scope> 
    </dependency>
       
   <!-- HikariCP is a dataSource pool quicker than c3p0 -->
   <dependency>
     <groupId>com.zaxxer</groupId>
     <artifactId>HikariCP</artifactId>
     <version>2.4.7</version>
     <scope>test</scope>
   </dependency>

   <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP-java7</artifactId>
        <version>2.4.9</version>
        <scope>test</scope>
   </dependency>
 
    <!-- H2Database memory database for unit test -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.193</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Mysql Database driver for unit test--> 
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>5.1.39</version>
        <scope>test</scope>
    </dependency>
 
    <!-- Oracle JDBC driver missing, need install it manually, 
	see https://www.mkyong.com/maven/how-to-add-oracle-jdbc-driver-in-your-maven-local-repository/--> 
  
	<!-- ojdbc6.jar example -->
	<!-- dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc6</artifactId>
		<version>11.2.0</version>
		<scope>test</scope>
	</dependency-->

	<!-- ojdbc7.jar example -->
	<!--dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc7</artifactId>
		<version>12.1.0</version>
		<scope>test</scope>
	</dependency--> 
	
	<!-- MS-SQLServer JDBC driver, see http://stackoverflow.com/questions/6942407/setting-up-maven-dependency-for-sql-server -->  
	<dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>6.1.0.jre8</version>
	  <scope>test</scope>
    </dependency>
	
 </dependencies> 
 
 <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler-plugin}</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${version.jar-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war-plugin}</version>
                <configuration>
                 <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${version.clean-plugin}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${version.resources-plugin}</version>
            </plugin>
			<!-- Surefire is a plugin for unit test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.surefire-plugin}</version>
            </plugin>
        </plugins>
    </build>
	 
		
    <profiles>

        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${version.source-plugin}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <attach>true</attach>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${version.javadoc-plugin}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <links>
                                <link>http://docs.oracle.com/javase/${version.javadoc}/docs/api</link>
                            </links>
							<additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${version.gpg-plugin}</version>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
			   <!-- Release, if is offical verison, will release to centre lib, if is "-SNAPSHOT" version, 
			        will release to sanpshot site, but they use same command:
					"mvn clean deploy -P release -Dgpg.passphrase=yourGPGpwd"
			   -->	
              <snapshotRepository>
                 <id>oss</id>
                 <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
              </snapshotRepository>
              <repository>
                 <id>oss</id>
                 <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
              </repository>
           </distributionManagement>
        </profile>
		
		<!-- If want release to private or company server, can take a look this releaseLocal profile -->
        <profile>
            <id>releaseLocal</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${version.source-plugin}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <repository>
                    <id>nexus-197</id>
                    <url>http://192.168.1.197:8081/content/repositories/releases</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles> 
</project>